{
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 9
            },
            {
              "triggerAtHour": 14
            },
            {
              "triggerAtHour": 17
            }
          ]
        }
      },
      "id": "724a8c31-4358-4700-8dc4-f047063bc710",
      "name": "Daily Call Scheduler - 3 Times",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2500,
        -120
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 24
            }
          ]
        }
      },
      "id": "11a32f66-8f1a-4c0d-a58c-d9b41ab3b0ed",
      "name": "Daily Knowledge Base Update",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1960,
        1440
      ]
    },
    {
      "parameters": {
        "operation": "list"
      },
      "id": "6bbbe479-e652-457f-831a-0758292b81fa",
      "name": "Find Steel Business Folder",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1760,
        1440
      ]
    },
    {
      "parameters": {
        "operation": "list"
      },
      "id": "6e696bf3-5cb3-4e8c-8a32-bfd03a726490",
      "name": "List All Files in Folder",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1560,
        1440
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $json.id }}"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "c5415881-57b7-43dc-8a1c-3af666fab3a9",
      "name": "Download Files",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1360,
        1440
      ]
    },
    {
      "parameters": {
        "loader": "pdfLoader",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "source",
                "value": "={{ $('Download Files').item.json.name }}"
              },
              {
                "name": "fileType",
                "value": "pdf"
              }
            ]
          }
        }
      },
      "id": "6a42f1b4-9406-4cbf-9eb0-7b7b4063678a",
      "name": "PDF Document Loader",
      "type": "@n8n/n8n-nodes-langchain.documentBinaryInputLoader",
      "typeVersion": 1,
      "position": [
        -1160,
        1340
      ]
    },
    {
      "parameters": {
        "loader": "csvLoader",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "source",
                "value": "={{ $('Download Files').item.json.name }}"
              },
              {
                "name": "fileType",
                "value": "csv"
              },
              {
                "name": "dataType",
                "value": "={{ $('Download Files').item.json.name.toLowerCase().includes('price') ? 'price_list' : $('Download Files').item.json.name.toLowerCase().includes('stock') ? 'stock_data' : 'general' }}"
              }
            ]
          }
        }
      },
      "id": "2ce878db-ca20-4de0-8bc7-ede7df9d4f5a",
      "name": "CSV Document Loader",
      "type": "@n8n/n8n-nodes-langchain.documentBinaryInputLoader",
      "typeVersion": 1,
      "position": [
        -1160,
        1540
      ]
    },
    {
      "parameters": {
        "chunkOverlap": 200,
        "options": {}
      },
      "id": "e5c1dfb7-a98e-455b-bb83-2beefb3afe57",
      "name": "Recursive Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -960,
        1440
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "9cbab1d3-275a-4c43-a236-2aa5a92e00b2",
      "name": "OpenAI Embeddings",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -1160,
        1740
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "steel-business-kb",
          "mode": "list"
        },
        "options": {
          "clearNamespace": false
        }
      },
      "id": "00909326-937f-47e0-8910-c62748d9a2a5",
      "name": "Pinecone Vector Store - Insert",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        -760,
        1440
      ]
    },
    {
      "parameters": {
        "content": "## RAG System for Steel Business\n\nThis section handles:\n1. Daily sync of Google Drive files\n2. Document processing (PDF, CSV, Excel)\n3. Text splitting for optimal retrieval\n4. Embedding generation\n5. Storage in Pinecone vector DB\n\nFiles are automatically categorized:\n- Price lists\n- Stock/Inventory data\n- Product specifications\n- General information",
        "height": 390,
        "width": 300
      },
      "id": "fefdeda3-dfde-4f9a-a5cf-c208222d3549",
      "name": "RAG System Notes",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -420,
        1080
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1yLs003vc_3KE6fg-ZjfIT9A-tOMgTlvYF5CQ2qYLIpU",
          "mode": "list",
          "cachedResultName": "YOUR_CUSTOMER_LIST_SHEET",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1yLs003vc_3KE6fg-ZjfIT9A-tOMgTlvYF5CQ2qYLIpU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1yLs003vc_3KE6fg-ZjfIT9A-tOMgTlvYF5CQ2qYLIpU/edit#gid=0"
        },
        "options": {}
      },
      "id": "38ef1a64-680e-4082-82d6-760932acf680",
      "name": "Load Customer List",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.4,
      "position": [
        -2300,
        -120
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ediVFZI7sTJYtXDC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{ $json.last_called }}",
              "rightValue": "={{ DateTime.now().minus({ days: 7 }).toISO() }}",
              "operator": {
                "type": "dateTime",
                "operation": "before"
              }
            },
            {
              "leftValue": "={{ $json.last_called }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "isEmpty"
              }
            }
          ],
          "combineOperation": "any"
        },
        "options": {}
      },
      "id": "8156076f-ca6d-4af9-9131-8a298c2a0c8b",
      "name": "Filter Callable Customers",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        -2100,
        -120
      ]
    },
    {
      "parameters": {
        "jsCode": "// Check monthly call limit (50 calls max)\nconst staticData = $getWorkflowStaticData('global');\nconst currentMonth = DateTime.now().toFormat('yyyy-MM');\n\nif (!staticData.monthlyCallCount) {\n  staticData.monthlyCallCount = {};\n}\n\nif (!staticData.monthlyCallCount[currentMonth]) {\n  staticData.monthlyCallCount[currentMonth] = 0;\n}\n\nconst monthlyCount = staticData.monthlyCallCount[currentMonth];\n\nif (monthlyCount >= 50) {\n  return [];\n}\n\nconst remainingCalls = 50 - monthlyCount;\nconst callsToday = Math.min(3, remainingCalls);\n\nconst customers = $input.all();\nreturn customers.slice(0, callsToday);"
      },
      "id": "f0db606c-20fb-44ea-9b84-1eb4c94869be",
      "name": "Check Monthly Limit (50 calls)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1900,
        -120
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b53a3da2-197d-423f-ad80-c12dbeaccd71",
      "name": "Process One Customer",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1700,
        -120
      ]
    },
    {
      "parameters": {
        "jsCode": "// Prepare agent prompt with customer context\nconst customer = $input.item.json;\n\nconst systemPrompt = `आप रवि हैं, [Company Name] के एक अनुभवी सेल्स एक्जीक्यूटिव। आप हिंदी में बात करते हैं और ग्राहकों के साथ दोस्ताना और भरोसेमंद रिश्ता बनाते हैं।\n\nग्राहक की जानकारी:\n- नाम: ${customer.customer_name}\n- व्यवसाय: ${customer.business_type}\n- पसंदीदा प्रोडक्ट: ${customer.preferred_products || 'सभी स्टील प्रोडक्ट्स'}\n- पिछली खरीदारी: ${customer.last_purchase || 'नया ग्राहक'}\n\nबातचीत की गाइडलाइन:\n1. गर्मजोशी से अभिवादन करें और छोटी सी बात से शुरुआत करें\n2. उनके बिज़नेस के बारे में पूछें\n3. स्टील की जरूरतों के बारे में जानें\n4. रेट और स्टॉक की जानकारी दें (get_steel_info function का उपयोग करें)\n5. अगर स्टॉक है तो सेल क्लोज करने की कोशिश करें\n6. अगर स्टॉक नहीं है तो फॉलो-अप का समय तय करें\n\nयाद रखें:\n- हमेशा विनम्र और मददगार रहें\n- जल्दबाजी न करें\n- ग्राहक की जरूरतों को समझें\n- सही जानकारी दें`;\n\nreturn {\n  systemPrompt,\n  customer\n};"
      },
      "id": "f2af1706-3c2f-4cf2-86b8-4bbd1043ca8e",
      "name": "Prepare Agent Context",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1500,
        -120
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/assistant",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.vapiApi.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "Ravi - Steel Sales Agent"
            },
            {
              "name": "model",
              "value": {
                "provider": "openai",
                "model": "gpt-4",
                "messages": [
                  {
                    "role": "system",
                    "content": "={{ $('Prepare Agent Context').item.json.systemPrompt }}"
                  }
                ],
                "functions": [
                  {
                    "name": "get_steel_info",
                    "description": "स्टील प्रोडक्ट्स, रेट्स और स्टॉक की जानकारी प्राप्त करें",
                    "parameters": {
                      "type": "object",
                      "properties": {
                        "query": {
                          "type": "string",
                          "description": "स्टील के बारे में सवाल"
                        },
                        "query_type": {
                          "type": "string",
                          "enum": [
                            "price",
                            "stock",
                            "product_info",
                            "general"
                          ],
                          "description": "सवाल का प्रकार"
                        }
                      },
                      "required": [
                        "query",
                        "query_type"
                      ]
                    }
                  },
                  {
                    "name": "book_order",
                    "description": "ग्राहक का ऑर्डर बुक करें",
                    "parameters": {
                      "type": "object",
                      "properties": {
                        "product": {
                          "type": "string",
                          "description": "प्रोडक्ट का नाम"
                        },
                        "quantity": {
                          "type": "string",
                          "description": "मात्रा (टन में)"
                        },
                        "customer_name": {
                          "type": "string",
                          "description": "ग्राहक का नाम"
                        }
                      },
                      "required": [
                        "product",
                        "quantity",
                        "customer_name"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "name": "voice",
              "value": {
                "provider": "11labs",
                "voiceId": "IKne3meq5aSn9XLyUdCD",
                "model": "eleven_monolingual_v1",
                "stability": 0.5,
                "similarityBoost": 0.8,
                "style": 0,
                "useSpeakerBoost": true
              }
            },
            {
              "name": "language",
              "value": "hi"
            },
            {
              "name": "firstMessage",
              "value": "नमस्ते! मैं रवि बोल रहा हूं [Company Name] से। आप कैसे हैं? मैंने सोचा आपसे बात करूं क्योंकि हमारे पास कुछ बेहतरीन स्टील ऑफर्स हैं।"
            },
            {
              "name": "serverUrl",
              "value": "={{ $resumeWebhookUrl }}"
            },
            {
              "name": "endCallFunctionEnabled",
              "value": true
            },
            {
              "name": "voicemailMessage",
              "value": "नमस्ते, मैं रवि [Company Name] से बोल रहा था। मैं आपसे स्टील प्रोडक्ट्स के बारे में बात करना चाहता था। कृपया मुझे इस नंबर पर वापस कॉल करें। धन्यवाद!"
            }
          ]
        },
        "options": {}
      },
      "id": "95ef2d9f-6d24-4c59-b31c-ebb1fefc1c68",
      "name": "Create Vapi Assistant",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1300,
        -120
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.vapi.ai/call",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{ $credentials.vapiApi.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "assistantId",
              "value": "={{ $json.id }}"
            },
            {
              "name": "customer",
              "value": {
                "number": "={{ $('Process One Customer').item.json.phone_number }}",
                "name": "={{ $('Process One Customer').item.json.customer_name }}"
              }
            },
            {
              "name": "phoneNumberId",
              "value": "YOUR_VAPI_PHONE_NUMBER_ID"
            },
            {
              "name": "metadata",
              "value": {
                "customerId": "={{ $('Process One Customer').item.json.id }}",
                "customerName": "={{ $('Process One Customer').item.json.customer_name }}",
                "businessType": "={{ $('Process One Customer').item.json.business_type }}"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "24dc206e-12d1-4ecb-b27d-32535158fde1",
      "name": "Initiate Call",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1100,
        -120
      ]
    },
    {
      "parameters": {
        "jsCode": "// Update monthly call count\nconst staticData = $getWorkflowStaticData('global');\nconst currentMonth = DateTime.now().toFormat('yyyy-MM');\n\nif (!staticData.monthlyCallCount) {\n  staticData.monthlyCallCount = {};\n}\n\nif (!staticData.monthlyCallCount[currentMonth]) {\n  staticData.monthlyCallCount[currentMonth] = 0;\n}\n\nstaticData.monthlyCallCount[currentMonth] += 1;\n\nreturn {\n  callId: $json.id,\n  monthlyCount: staticData.monthlyCallCount[currentMonth]\n};"
      },
      "id": "1abb593e-81c6-4bd1-a53c-e572639a27b9",
      "name": "Update Call Count",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -900,
        -120
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "vapi-webhook",
        "responseMode": "responseNode",
        "options": {
          "rawBody": true
        }
      },
      "id": "ecd3d742-6aff-4db9-8184-c2a43810be87",
      "name": "Vapi Function Call Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2440,
        580
      ],
      "webhookId": "vapi-function-webhook"
    },
    {
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{ $json.message.type }}",
              "rightValue": "function-call",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "25136b66-d4b6-4342-b66d-41daaeee7dfa",
      "name": "Check Function Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2180,
        580
      ]
    },
    {
      "parameters": {
        "jsCode": "// Extract function details from Vapi webhook\nconst functionCall = $input.item.json.message.functionCall;\nconst functionName = functionCall.name;\nconst parameters = functionCall.parameters;\n\nif (functionName === 'get_steel_info') {\n  return {\n    functionName,\n    query: parameters.query,\n    queryType: parameters.query_type || 'general',\n    parameters\n  };\n} else if (functionName === 'book_order') {\n  return {\n    functionName,\n    orderDetails: parameters\n  };\n}\n\nreturn { functionName, parameters };"
      },
      "id": "2139ec27-1bd7-4b14-9722-582abbd0277d",
      "name": "Process Function Call",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1880,
        560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{ $json.functionName }}",
              "rightValue": "get_steel_info",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "76d1858f-7f62-4727-9927-d6411cda3d77",
      "name": "Is Steel Info Query",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1620,
        560
      ]
    },
    {
      "parameters": {
        "content": "## AI Agent with RAG\n\nThis is the core AI system that:\n1. Receives queries from Vapi calls\n2. Uses OpenAI Agent with tools\n3. Retrieves info from Pinecone\n4. Generates Hindi responses\n5. Handles order booking\n\nThe agent has access to:\n- Steel price information\n- Stock/inventory data\n- Product specifications\n- Order booking capability",
        "height": 370,
        "width": 260
      },
      "id": "78383b9e-ac7d-4010-b1cc-557d45b353c2",
      "name": "AI Agent Notes",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2860,
        400
      ]
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "आप एक स्टील बिजनेस असिस्टेंट हैं। आपको steel products, rates, और stock की जानकारी प्रदान करनी है। हमेशा हिंदी में जवाब दें और सटीक जानकारी दें।"
        }
      },
      "id": "07a54ea1-aab0-4532-9f32-2c6ea9cc5fe1",
      "name": "Conversational Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -1160,
        400
      ]
    },
    {
      "parameters": {},
      "id": "2c8b8e88-802a-4234-9bdb-9161455818fc",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.2,
      "position": [
        -1100,
        600
      ]
    },
    {
      "parameters": {
        "name": "get_steel_info",
        "description": "Retrieve steel product information, rates, and stock from knowledge base"
      },
      "id": "46cc8096-2eb5-4da3-8935-0715bb142227",
      "name": "Steel Info Retrieval Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.1,
      "position": [
        -860,
        600
      ]
    },
    {
      "parameters": {
        "name": "book_order",
        "description": "Book a steel order for the customer"
      },
      "id": "0fb3beb3-1155-43aa-b4ca-25a30eed93df",
      "name": "Book Order Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.1,
      "position": [
        -840,
        220
      ]
    },
    {
      "parameters": {},
      "id": "f191ac88-551f-497e-999a-db2c83d0eff7",
      "name": "Execute Workflow Trigger",
      "type": "@n8n/n8n-nodes-langchain.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -2480,
        1000
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "014ffc2c-2ee6-49c0-838f-82631c279bfa",
      "name": "Query Embeddings",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -1760,
        1140
      ]
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "value": "steel-business-kb",
          "mode": "list"
        },
        "options": {}
      },
      "id": "e26995f8-ac11-4d65-be96-ab4c7025da39",
      "name": "Pinecone Vector Store - Retrieve",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        -1560,
        1040
      ]
    },
    {
      "parameters": {},
      "id": "588bab95-1dcb-48e7-835f-4d8711f24bed",
      "name": "Vector Store Retriever",
      "type": "@n8n/n8n-nodes-langchain.retrieverVectorStore",
      "typeVersion": 1,
      "position": [
        -1360,
        1040
      ]
    },
    {
      "parameters": {},
      "id": "eddbdc51-3911-4ac7-9e12-6500569df076",
      "name": "QA Chain Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.3,
      "position": [
        -1360,
        1140
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "6e5e60a2-3351-42b3-85bc-6f053d544a25",
      "name": "Retrieval QA Chain",
      "type": "@n8n/n8n-nodes-langchain.chainRetrievalQa",
      "typeVersion": 1.3,
      "position": [
        -1160,
        1040
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "9aef77a7-4b1d-448a-b25b-96ac63b1dce9",
      "name": "Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        -960,
        1040
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\n  \"result\": $json.text || $json.response || 'माफ़ करें, इस समय यह जानकारी उपलब्ध नहीं है।'\n} }}",
        "options": {}
      },
      "id": "dbc68de2-85d4-4b11-bba5-78de83c3c7d8",
      "name": "Return Steel Info Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -500,
        420
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "YOUR_ORDER_SHEET_ID",
          "mode": "id"
        },
        "sheetName": "Orders",
        "options": {}
      },
      "id": "a08c08c5-05fd-440d-b319-ab20c442412c",
      "name": "Save Order",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.4,
      "position": [
        -1360,
        800
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\n  \"result\": \"Order booked successfully for \" + $('Process Function Call').item.json.orderDetails.quantity + \" tons of \" + $('Process Function Call').item.json.orderDetails.product\n} }}",
        "options": {}
      },
      "id": "4096c57e-3364-44f2-b4ac-27d6df3c073e",
      "name": "Return Order Confirmation",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -1080,
        820
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "vapi-call-status",
        "responseMode": "lastNode",
        "options": {
          "rawBody": true
        }
      },
      "id": "1b18a3cf-6312-44de-b443-1c45a63bfc4c",
      "name": "Call Status Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2500,
        1200
      ],
      "webhookId": "vapi-status-webhook"
    },
    {
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{ $json.message.type }}",
              "rightValue": "end-of-call-report",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "26bb6743-2dd4-477d-8813-eb4bbeab70e1",
      "name": "Is Call End Report",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2240,
        1200
      ]
    },
    {
      "parameters": {
        "jsCode": "// Process call report\nconst report = $input.item.json.message;\nconst callId = report.call.id;\nconst duration = report.call.duration;\nconst status = report.call.status;\nconst transcript = report.call.transcript || [];\nconst summary = report.call.summary || '';\nconst metadata = report.call.metadata || {};\n\n// Extract key information from transcript\nlet customerSentiment = 'neutral';\nlet isInterested = false;\nlet nextAction = 'none';\nlet productsDiscussed = [];\n\n// Analyze transcript for sentiment and actions\nif (transcript.length > 0) {\n  const fullTranscript = transcript.map(t => t.text).join(' ');\n  \n  // Check for positive indicators\n  const positiveWords = ['हां', 'जरूर', 'चाहिए', 'बताइए', 'कितना', 'ऑर्डर', 'खरीदना'];\n  const negativeWords = ['नहीं', 'बाद में', 'सोचेंगे', 'जरूरत नहीं', 'महंगा'];\n  \n  const positiveCount = positiveWords.filter(word => fullTranscript.includes(word)).length;\n  const negativeCount = negativeWords.filter(word => fullTranscript.includes(word)).length;\n  \n  if (positiveCount > negativeCount) {\n    customerSentiment = 'positive';\n    isInterested = true;\n  } else if (negativeCount > positiveCount) {\n    customerSentiment = 'negative';\n  }\n  \n  // Extract products mentioned\n  const products = ['TMT', 'rod', 'sheet', 'pipe', 'angle', 'channel'];\n  productsDiscussed = products.filter(product => fullTranscript.toLowerCase().includes(product));\n}\n\n// Determine next action\nif (summary.includes('order') || summary.includes('ऑर्डर')) {\n  nextAction = 'order_placed';\n} else if (isInterested) {\n  nextAction = 'follow_up_required';\n} else if (customerSentiment === 'negative') {\n  nextAction = 'not_interested';\n}\n\nreturn {\n  callId,\n  customerId: metadata.customerId,\n  customerName: metadata.customerName,\n  callDate: new Date().toISOString(),\n  duration,\n  status,\n  customerSentiment,\n  isInterested,\n  productsDiscussed: productsDiscussed.join(', '),\n  nextAction,\n  summary,\n  agentPerformance: report.call.analysis?.agentEvaluation || 'good'\n};"
      },
      "id": "f31a43c8-a559-4177-a89a-3ab12f92c047",
      "name": "Process Call Report",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1980,
        1180
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "YOUR_CALL_LOG_SHEET_ID",
          "mode": "id"
        },
        "sheetName": "Call Logs",
        "options": {}
      },
      "id": "c8363602-dea6-434f-9a4f-2fbd619c8f58",
      "name": "Log Call Results",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.4,
      "position": [
        -1360,
        1240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{ $json.nextAction }}",
              "rightValue": "follow_up_required",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "95b8e99a-341b-43dd-822a-b0f931f2154b",
      "name": "Needs Follow Up",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1160,
        1240
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "YOUR_CUSTOMER_LIST_SHEET_ID",
          "mode": "id"
        },
        "sheetName": "Customers",
        "options": {}
      },
      "id": "de094055-d0ba-4f74-b875-c782cb1384e3",
      "name": "Update Customer Status",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.4,
      "position": [
        -1160,
        1340
      ]
    },
    {
      "parameters": {},
      "id": "fb3be7e2-df1b-4f82-ae0a-20a6209cac40",
      "name": "Schedule Follow-up",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 2,
      "position": [
        -960,
        1240
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 24
            }
          ]
        }
      },
      "id": "4a5c0435-48ef-4b36-8b9a-5e48dbf76ec4",
      "name": "Daily Report Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2860,
        1880
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1tbJNizReql7SbL4yJmK2cuvWZbMcahPuEqppdhminvk",
          "mode": "list",
          "cachedResultName": "YOUR_CALL_LOG_SHEET",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tbJNizReql7SbL4yJmK2cuvWZbMcahPuEqppdhminvk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1tbJNizReql7SbL4yJmK2cuvWZbMcahPuEqppdhminvk/edit#gid=0"
        },
        "options": {}
      },
      "id": "30a6cf55-63ab-477a-b371-83987a686dcd",
      "name": "Get Today's Calls",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.4,
      "position": [
        -2580,
        1880
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ediVFZI7sTJYtXDC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{ $json.callDate }}",
              "rightValue": "={{ DateTime.now().startOf('day').toISO() }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "b20412b5-47b5-4cca-8f65-908958f07c0e",
      "name": "Filter Today's Calls",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        -2360,
        1880
      ]
    },
    {
      "parameters": {
        "jsCode": "// Generate daily report\nconst calls = $input.all();\nconst staticData = $getWorkflowStaticData('global');\nconst currentMonth = DateTime.now().toFormat('yyyy-MM');\nconst monthlyCount = staticData.monthlyCallCount?.[currentMonth] || 0;\n\nconst totalCalls = calls.length;\nconst successfulCalls = calls.filter(c => c.json.status === 'completed').length;\nconst interestedCustomers = calls.filter(c => c.json.isInterested).length;\nconst ordersPlaced = calls.filter(c => c.json.nextAction === 'order_placed').length;\nconst followUpsRequired = calls.filter(c => c.json.nextAction === 'follow_up_required').length;\n\nconst avgDuration = calls.reduce((sum, c) => sum + (c.json.duration || 0), 0) / totalCalls || 0;\n\nconst productsDiscussed = {};\ncalls.forEach(c => {\n  if (c.json.productsDiscussed) {\n    c.json.productsDiscussed.split(', ').forEach(product => {\n      productsDiscussed[product] = (productsDiscussed[product] || 0) + 1;\n    });\n  }\n});\n\nconst report = `Daily Cold Call Report - ${new Date().toLocaleDateString('hi-IN')}\n\nMonthly Progress: ${monthlyCount}/50 calls completed\n\nToday's Statistics:\n- Total Calls Made: ${totalCalls}\n- Successful Calls: ${successfulCalls}\n- Failed/No Answer: ${totalCalls - successfulCalls}\n- Average Call Duration: ${Math.round(avgDuration / 60)} minutes\n\nCustomer Response:\n- Interested Customers: ${interestedCustomers}\n- Orders Placed: ${ordersPlaced}\n- Follow-ups Required: ${followUpsRequired}\n- Not Interested: ${calls.filter(c => c.json.nextAction === 'not_interested').length}\n\nProducts Discussed:\n${Object.entries(productsDiscussed).map(([product, count]) => `- ${product}: ${count} times`).join('\\n')}\n\nPerformance Summary:\n- Success Rate: ${Math.round((successfulCalls / totalCalls) * 100)}%\n- Interest Rate: ${Math.round((interestedCustomers / successfulCalls) * 100)}%\n- Conversion Rate: ${Math.round((ordersPlaced / totalCalls) * 100)}%\n\nTop Performing Calls:\n${calls\n  .filter(c => c.json.nextAction === 'order_placed')\n  .slice(0, 3)\n  .map(c => `- ${c.json.customerName} (${c.json.businessType})`)\n  .join('\\n') || '- No orders placed today'}\n`;\n\nreturn {\n  report,\n  stats: {\n    totalCalls,\n    successfulCalls,\n    interestedCustomers,\n    ordersPlaced,\n    followUpsRequired,\n    monthlyCount\n  }\n};"
      },
      "id": "0f1008c1-61df-4d88-95fd-f1fde360cf98",
      "name": "Generate Daily Report",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2120,
        1880
      ]
    },
    {
      "parameters": {
        "amount": 2,
        "unit": "seconds"
      },
      "id": "eaf10c6e-9728-4d51-a9fa-cef0ffd68cda",
      "name": "Wait Between Calls",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        -700,
        -120
      ],
      "webhookId": "ff53c1b2-a4d3-4d01-b648-9acc8a777f65"
    },
    {
      "parameters": {
        "content": "## Complete Setup Instructions\n\n### 1. Pinecone Setup:\n- Create index: 'steel-business-kb'\n- Dimension: 1536\n- Metric: cosine\n- Cloud: AWS\n- Region: us-east-1\n\n### 2. Google Drive Structure:\n```\nSteel Business Data/\n├── TMT_Steel_Rates_2025.xlsx\n├── Steel_Inventory_Stock.csv\n├── Product_Specifications.pdf\n└── Customer_Price_List.xlsx\n```\n\n### 3. Google Sheets Setup:\n\n**Customers Sheet:**\n- id, customer_name, phone_number\n- business_type, preferred_products\n- last_called, last_purchase\n- call_outcome, next_call_date\n\n**Orders Sheet:**\n- order_id, customer_name\n- product, quantity\n- order_date, status\n\n**Call Logs Sheet:**\n- callId, customerId, customerName\n- callDate, duration, status\n- customerSentiment, isInterested\n- productsDiscussed, nextAction, summary\n\n### 4. Vapi Configuration:\n- Create phone number\n- Set webhook URLs from n8n\n- Configure voice settings\n\n### 5. Replace These IDs:\n- YOUR_CUSTOMER_LIST_SHEET_ID\n- YOUR_ORDER_SHEET_ID\n- YOUR_CALL_LOG_SHEET_ID\n- YOUR_VAPI_PHONE_NUMBER_ID\n- YOUR_PINECONE_INDEX (URL)\n\n### 6. Add Credentials:\n- OpenAI API (GPT-4 access)\n- Vapi API Key\n- Pinecone API Key\n- Google OAuth2\n- SMTP for emails",
        "height": 1260,
        "width": 460
      },
      "id": "79460276-3e00-4f77-800d-3ad465f9a50b",
      "name": "Complete Setup Guide",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        140,
        -500
      ]
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1260,
        600
      ],
      "id": "e98f91bc-8785-4b81-9e18-0a8993d57de2",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "tDFHIpYuEDuCNngG",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "uddeshya@jiplsteel.com ",
        "subject": "=Daily Cold Call Report - {{ DateTime.now().toFormat('dd/MM/yyyy') }}",
        "message": "=Subject: Daily Cold Call Report - {{ DateTime.now().toFormat('dd/MM/yyyy') }} | {{monthlyCount}}/50 Calls\n\nDear Management Team,\n\nHere's today's cold calling performance summary:\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n📊 DAILY PERFORMANCE METRICS\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n📞 Call Statistics:\n- Total Calls Made: {{ totalCalls }}\n- Successful Connections: {{ successfulCalls }} ({{ successRate }}%)\n- Failed/No Answer: {{ failedCalls }}\n- Average Call Duration: {{ avgDuration }} minutes\n\n💼 Business Results:\n- Interested Customers: {{ interestedCustomers }}\n- Orders Placed: {{ ordersPlaced }}\n- Order Value: ₹{{ totalOrderValue }}\n- Follow-ups Scheduled: {{ followUpsRequired }}\n\n📈 Conversion Funnel:\nCalls Made → Connected → Interested → Orders\n   {{ totalCalls }}    →    {{ successfulCalls }}    →    {{ interestedCustomers }}    →    {{ ordersPlaced }}\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n🏆 TOP PERFORMERS\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\nToday's Orders:\n{{ #each orders }}\n- {{ customerName }} - {{ product }} - {{ quantity }} tons - ₹{{ value }}\n{{ /each }}\n\nProducts in Demand:\n{{ #each productsDiscussed }}\n- {{ product }}: {{ count }} inquiries\n{{ /each }}\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n💰 FINANCIAL SUMMARY\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\nRevenue Generated: ₹{{ todayRevenue }}\nAPI Costs: ₹{{ todayApiCost }}\nCost per Call: ₹{{ costPerCall }}\nROI: {{ roiPercentage }}%\n\nMonthly Progress: {{ monthlyCount }}/50 calls ({{ monthlyPercentage }}%)\nProjected Month-End Revenue: ₹{{ projectedRevenue }}\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n🔔 ACTION ITEMS\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\nTomorrow's Follow-ups:\n{{ #each tomorrowFollowUps }}\n- {{ customerName }} - {{ product }} interest - Call by {{ time }}\n{{ /each }}\n\n⚠️ Attention Needed:\n{{ #each alerts }}\n- {{ alert }}\n{{ /each }}\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n📊 TREND ANALYSIS\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\nWeekly Comparison:\n- This Week: {{ thisWeekCalls }} calls, {{ thisWeekOrders }} orders\n- Last Week: {{ lastWeekCalls }} calls, {{ lastWeekOrders }} orders\n- Change: {{ weeklyChange }}%\n\nBest Performing:\n- Time Slot: {{ bestTimeSlot }}\n- Product: {{ bestProduct }}\n- Customer Type: {{ bestCustomerType }}\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\nSystem Health: ✅ All Systems Operational\nNext Calls Scheduled: {{ nextCallTime }}\n\nFor detailed analytics, check the dashboard.\n\nBest regards,\nSteel Cold Calling System",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -1900,
        1880
      ],
      "id": "f04db100-733b-4116-a3f4-3525b2ce4e50",
      "name": "Gmail",
      "webhookId": "e48bcd21-e06d-4b00-ae8f-e69dd0a4a7b7"
    }
  ],
  "connections": {
    "Daily Call Scheduler - 3 Times": {
      "main": [
        [
          {
            "node": "Load Customer List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Daily Knowledge Base Update": {
      "main": [
        [
          {
            "node": "Find Steel Business Folder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Steel Business Folder": {
      "main": [
        [
          {
            "node": "List All Files in Folder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List All Files in Folder": {
      "main": [
        [
          {
            "node": "Download Files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Embeddings": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store - Insert",
            "type": "ai_embedding",
            "index": 0
          },
          {
            "node": "Pinecone Vector Store - Retrieve",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Load Customer List": {
      "main": [
        [
          {
            "node": "Filter Callable Customers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Callable Customers": {
      "main": [
        [
          {
            "node": "Check Monthly Limit (50 calls)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Monthly Limit (50 calls)": {
      "main": [
        [
          {
            "node": "Process One Customer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process One Customer": {
      "main": [
        [
          {
            "node": "Prepare Agent Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Agent Context": {
      "main": [
        [
          {
            "node": "Create Vapi Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Vapi Assistant": {
      "main": [
        [
          {
            "node": "Initiate Call",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Initiate Call": {
      "main": [
        [
          {
            "node": "Update Call Count",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Call Count": {
      "main": [
        [
          {
            "node": "Wait Between Calls",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vapi Function Call Webhook": {
      "main": [
        [
          {
            "node": "Check Function Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Function Type": {
      "main": [
        [
          {
            "node": "Process Function Call",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Function Call": {
      "main": [
        [
          {
            "node": "Is Steel Info Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Steel Info Query": {
      "main": [
        [
          {
            "node": "Conversational Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save Order",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conversational Agent": {
      "main": [
        [
          {
            "node": "Return Steel Info Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "Conversational Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Steel Info Retrieval Tool": {
      "ai_tool": [
        [
          {
            "node": "Conversational Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Book Order Tool": {
      "ai_tool": [
        [
          {
            "node": "Conversational Agent",
            "type": "ai_tool",
            "index": 1
          }
        ]
      ]
    },
    "Query Embeddings": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store - Retrieve",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store - Retrieve": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Retriever",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Retriever": {
      "ai_retriever": [
        [
          {
            "node": "Retrieval QA Chain",
            "type": "ai_retriever",
            "index": 0
          }
        ]
      ]
    },
    "Save Order": {
      "main": [
        [
          {
            "node": "Return Order Confirmation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Status Webhook": {
      "main": [
        [
          {
            "node": "Is Call End Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Call End Report": {
      "main": [
        [
          {
            "node": "Process Call Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Call Report": {
      "main": [
        [
          {
            "node": "Log Call Results",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update Customer Status",
            "type": "main",
            "index": 0
          },
          {
            "node": "Needs Follow Up",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Daily Report Trigger": {
      "main": [
        [
          {
            "node": "Get Today's Calls",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Today's Calls": {
      "main": [
        [
          {
            "node": "Filter Today's Calls",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Today's Calls": {
      "main": [
        [
          {
            "node": "Generate Daily Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Daily Report": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait Between Calls": {
      "main": [
        [
          {
            "node": "Process One Customer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Conversational Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c563c2e2f3d0d5678411e7d3a1db598c23da3182e6ce2df0a2dd8daf7ee8d648"
  }
}

